%% variables
dataset_root = 'C:/Users/Administrator/Documents/Datasets/fpa_benchmark/';
gen_root = 'C:/Users/Administrator/Documents/Unreal Projects/UniBhamCV/Saved/Output/SingleHand/';
gen_folder = '';
hand_gt_folder = 'Hand_pose_annotation_v1/';
subject_folder = 'Subject_1/';
action_folder = 'close_juice_bottle/';
seq_folder = '1/';
file_name = 'skeleton.txt';
hand_gt_filepath = [dataset_root hand_gt_folder subject_folder action_folder seq_folder file_name];
out_filepath = [gen_root gen_folder];
disp(hand_gt_filepath);
json_tab = '  ';
num_bone_angles = 23;
%% write file header
mkdir(out_filepath);
fileID = fopen([out_filepath 'HandPoseSequence.json'],'w');
fprintf(fileID,'{');
fprintf(fileID,'\n');
fprintf(fileID,json_tab);fprintf(fileID,'"Type": "SingleHand",');fprintf(fileID,'\n');
fprintf(fileID,json_tab);fprintf(fileID,'"Name": "SingleHandVRMale",');fprintf(fileID,'\n');
fprintf(fileID,json_tab);fprintf(fileID,'"Mesh": "/Game/Meshes/male_hand_high_r.male_hand_high_r",');fprintf(fileID,'\n');
fprintf(fileID,json_tab);fprintf(fileID,'"BoneUpdate": "BoneAngles",');fprintf(fileID,'\n');    
fprintf(fileID,json_tab);fprintf(fileID,'"Frames": [');fprintf(fileID,'\n');
%% camera colour transform
camera_colour_ext_transl = [25.7, 1.22, 3.902];
camera_colour_ext_rot =...
    [[0.999988496304 -0.00468848412856 0.000982563360594];...
    [0.00469115935266 0.999985218048 -0.00273845880292];...
    [-0.000969709653873 0.00274303671904 0.99999576807]]; 
camera_colour_int = eye(3);
camera_colour_int(1, 1) = 1395.749023;
camera_colour_int(2, 2) = 1395.749268;
camera_colour_int(1, 3) = 935.732544;
camera_colour_int(2, 3) = 540.681030;
%% read poses
thumb_idxs = [2 7 8 9];
index_idxs = [3 10 11 12];
middle_idxs = [4 13 14 15];
ring_idxs = [5 16 17 18];
little_idxs = [6 19 20 21];

M = dlmread(hand_gt_filepath);
first_hand_pose = [];
all_hand_angles = zeros(size(M, 1), 23);
all_wrist_positions = zeros(size(M, 1), 3);
all_hand_poses = cell(1, size(M, 1));
idx = 0;
for i=1:size(M,1)    
    idx = idx + 1;
    
    hand_pose = reshape(M(i, 2:end), [3, 21])';
    
    % transform to world coordinates
    %hand_pose_transf = [camera_colour_int * hand_pose']';
    %hand_pose = hand_pose_transf;

    if i == 1
       first_hand_pose = hand_pose; 
    end
    % from mm to cm
    hand_pose = hand_pose * 0.1; 
    hand_pose = hand_pose + [0, 0, 75];
    
    thumb_pose = hand_pose(thumb_idxs, :);
    index_pose = hand_pose(index_idxs, :);
    middle_pose = hand_pose(middle_idxs, :);
    ring_pose = hand_pose(ring_idxs, :);
    little_pose = hand_pose(little_idxs, :);

    % get hand angles
    [hand_angles_, all_hand_poses{idx}] = FPAGetHandAngles(M, i); 
    
    hand_angles = hand_angles_;
    hand_angles(1:end) = 0;
    hand_angles(1) = hand_angles_(1);
    hand_angles(5) = -45;
    hand_angles(6:7) = hand_angles_(6:7);
    hand_angles(8:11) = hand_angles_(8:11);
    hand_angles(12:15) = hand_angles_(12:15);
    hand_angles(16:19) = hand_angles_(16:19);
    hand_angles(20:23) = hand_angles_(20:23);
    
    all_hand_angles(i, :) = hand_angles;
    fprintf(fileID,[json_tab json_tab]);fprintf(fileID,'{');fprintf(fileID,'\n');    
    fprintf(fileID,[json_tab json_tab json_tab]);fprintf(fileID,['"Frame": ' num2str(i) ',']);fprintf(fileID,'\n');
    fprintf(fileID,[json_tab json_tab json_tab]);fprintf(fileID,'"WristPosition": [');
    for j=1:2
        fprintf(fileID,[num2str(hand_pose(1, j)) ', ']);
    end
    fprintf(fileID,num2str(hand_pose(1, 3)));
    all_wrist_positions(i, :) = hand_pose(1, :); 
    fprintf(fileID,'],\n');
    fprintf(fileID,[json_tab json_tab json_tab]);fprintf(fileID,'"BoneAngles": [');
    for j=1:22
        fprintf(fileID,[num2str(hand_angles(j)) ', ']);
    end
    fprintf(fileID,num2str(hand_angles(23)));
    fprintf(fileID,'],\n'); 
    % write positions
    fprintf(fileID,[json_tab json_tab json_tab]);fprintf(fileID,'"BonePositions": [');
    WriteFingerJoints(hand_pose(1, :), fileID);
    WriteFingerJoints(little_pose, fileID);
    WriteFingerJoints(thumb_pose, fileID);
    WriteFingerJoints(middle_pose, fileID);
    WriteFingerJoints(ring_pose, fileID);
    % write last finger (index)
    for joint_idx=1:3
        for dim_idx=1:3
            fprintf(fileID,num2str(index_pose(joint_idx, dim_idx)));
            if joint_idx < 3 || dim_idx < 3
                fprintf(fileID,',');
            end
        end
    end
    fprintf(fileID,']\n');    
    fprintf(fileID,[json_tab json_tab]);
    fprintf(fileID,'}');
    if i < size(M,1)
        fprintf(fileID,',');
    end
    fprintf(fileID,'\n');    
    %disp(hand_pose);
end
%% close file
fprintf(fileID,json_tab);fprintf(fileID,']');fprintf(fileID,'\n');
fprintf(fileID,'}');
fclose(fileID);
fclose('all');


